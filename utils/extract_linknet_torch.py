import numpy as np
import pickle
import os
import torchfile
from collections import OrderedDict
import pdb

#model= torchfile.load('../LinkNet-1.0/model-cv-IoU.net')
model= torchfile.load('../../LinkNet-1.0/dict_net.t7')
pdb.set_trace()

#c1= model.modules.popitem()[1]
#network_conv1_x_conv1_weights = np.asarray(c1['weight']).transpose(2,3,1,0)  # (7, 7, 3, 64)
#network_conv1_x_conv1_biases = np.asarray(c1['bias'])  # (64)
#
#pdb.set_trace()
#c2= model.modules.popitem()[1]
#network_conv1_x_bn1_mu = np.asarray(c2['running_mean'])  # (64,)
#network_conv1_x_bn1_sigma = np.asarray(c2['running_var'])  # (64,)
#network_conv1_x_bn1_beta = np.asarray(c2['bias'])  # (64,)
#network_conv1_x_bn1_gamma = np.asarray(c2['weight'])  # (64,)
#
#c3= model.modules.popitem()
#c3= model.modules.popitem()
#c3= model.modules.popitem()[0]
#network_conv2_x_conv2_1_conv_1_weights = np.asarray(model.modules[3]['weight']).transpose(2,3,1,0)  # (3, 3, 64, 64)
#network_conv2_x_conv2_1_conv_1_biases = np.asarray(model.modules[3]['bias'])  # (64,)
#network_conv2_x_conv2_1_bn_1_mu = np.asarray(model.modules[4]['running_mean'])  # (64,)
#network_conv2_x_conv2_1_bn_1_sigma = np.asarray(model.modules[4]['running_var'])  # (64,)
#network_conv2_x_conv2_1_bn_1_beta = np.asarray(model.modules[4]['bias'])  # (64,)
#network_conv2_x_conv2_1_bn_1_gamma = np.asarray(model.modules[4]['weight'])  # (64,)
#network_conv2_x_conv2_1_conv_2_weights = np.asarray(model.modules[5]['weight']).transpose(2,3,1,0)  # (3, 3, 64, 64)
#network_conv2_x_conv2_1_conv_2_biases = np.asarray(model.modules[5]['bias'])  # (64)
#network_conv2_x_conv2_1_bn_2_mu = np.asarray(model.modules[6]['running_mean'])  # (64,)
#network_conv2_x_conv2_1_bn_2_sigma =  np.asarray(model.modules[6]['running_var'])  # (64,)
#network_conv2_x_conv2_1_bn_2_beta =  np.asarray(model.modules[6]['bias'])  # (64,)
#network_conv2_x_conv2_1_bn_2_gamma =  np.asarray(model.modules[6]['weight'])  # (64,)
#
#network_conv2_x_conv2_2_conv_1_weights = np.asarray(model.modules[7]['weight']).transpose(2,3,1,0)  # (3, 3, 64, 64)
#network_conv2_x_conv2_2_conv_1_biases =  np.asarray(model.modules[7]['bias'])  # (64)
#network_conv2_x_conv2_2_bn_1_mu =  np.asarray(model.modules[8]['running_mean'])  # (64,)
#network_conv2_x_conv2_2_bn_1_sigma =  np.asarray(model.modules[8]['running_var'])  # (64,)
#network_conv2_x_conv2_2_bn_1_beta =  np.asarray(model.modules[8]['bias'])  # (64,)
#network_conv2_x_conv2_2_bn_1_gamma =  np.asarray(model.modules[8]['weight'])  # (64,)
#network_conv2_x_conv2_2_conv_2_weights = np.asarray(model.modules[9]['weight']).transpose(2,3,1,0)  # (3, 3, 64, 64)
#network_conv2_x_conv2_2_conv_2_biases =  np.asarray(model.modules[9]['bias'])  # (64)
#network_conv2_x_conv2_2_bn_2_mu =  np.asarray(model.modules[10]['running_mean'])  # (64,)
#network_conv2_x_conv2_2_bn_2_sigma =  np.asarray(model.modules[10]['running_var'])  # (64,)
#network_conv2_x_conv2_2_bn_2_beta =  np.asarray(model.modules[10]['bias'])  # (64,)
#network_conv2_x_conv2_2_bn_2_gamma =  np.asarray(model.modules[10]['weight'])  # (64,)
#
#
#network_conv3_x_conv3_1_shortcut_conv_weights = None  # (1, 1, 64, 128)
#network_conv3_x_conv3_1_conv_1_weights = None  # (3, 3, 64, 128)
#network_conv3_x_conv3_1_bn_1_mu = None  # (128,)
#network_conv3_x_conv3_1_bn_1_sigma = None  # (128,)
#network_conv3_x_conv3_1_bn_1_beta = None  # (128,)
#network_conv3_x_conv3_1_bn_1_gamma = None  # (128,)
#network_conv3_x_conv3_1_conv_2_weights = None  # (3, 3, 128, 128)
#network_conv3_x_conv3_1_bn_2_mu = None  # (128,)
#network_conv3_x_conv3_1_bn_2_sigma = None  # (128,)
#network_conv3_x_conv3_1_bn_2_beta = None  # (128,)
#network_conv3_x_conv3_1_bn_2_gamma = None  # (128,)
#network_conv3_x_conv3_2_conv_1_weights = None  # (3, 3, 128, 128)
#network_conv3_x_conv3_2_bn_1_mu = None  # (128,)
#network_conv3_x_conv3_2_bn_1_sigma = None  # (128,)
#network_conv3_x_conv3_2_bn_1_beta = None  # (128,)
#network_conv3_x_conv3_2_bn_1_gamma = None  # (128,)
#network_conv3_x_conv3_2_conv_2_weights = None  # (3, 3, 128, 128)
#network_conv3_x_conv3_2_bn_2_mu = None  # (128,)
#network_conv3_x_conv3_2_bn_2_sigma = None  # (128,)
#network_conv3_x_conv3_2_bn_2_beta = None  # (128,)
#network_conv3_x_conv3_2_bn_2_gamma = None  # (128,)
#network_conv4_x_conv4_1_shortcut_conv_weights = None  # (1, 1, 128, 256)
#network_conv4_x_conv4_1_conv_1_weights = None  # (3, 3, 128, 256)
#network_conv4_x_conv4_1_bn_1_mu = None  # (256,)
#network_conv4_x_conv4_1_bn_1_sigma = None  # (256,)
#network_conv4_x_conv4_1_bn_1_beta = None  # (256,)
#network_conv4_x_conv4_1_bn_1_gamma = None  # (256,)
#network_conv4_x_conv4_1_conv_2_weights = None  # (3, 3, 256, 256)
#network_conv4_x_conv4_1_bn_2_mu = None  # (256,)
#network_conv4_x_conv4_1_bn_2_sigma = None  # (256,)
#network_conv4_x_conv4_1_bn_2_beta = None  # (256,)
#network_conv4_x_conv4_1_bn_2_gamma = None  # (256,)
#network_conv4_x_conv4_2_conv_1_weights = None  # (3, 3, 256, 256)
#network_conv4_x_conv4_2_bn_1_mu = None  # (256,)
#network_conv4_x_conv4_2_bn_1_sigma = None  # (256,)
#network_conv4_x_conv4_2_bn_1_beta = None  # (256,)
#network_conv4_x_conv4_2_bn_1_gamma = None  # (256,)
#network_conv4_x_conv4_2_conv_2_weights = None  # (3, 3, 256, 256)
#network_conv4_x_conv4_2_bn_2_mu = None  # (256,)
#network_conv4_x_conv4_2_bn_2_sigma = None  # (256,)
#network_conv4_x_conv4_2_bn_2_beta = None  # (256,)
#network_conv4_x_conv4_2_bn_2_gamma = None  # (256,)
#network_conv5_x_conv5_1_shortcut_conv_weights = None  # (1, 1, 256, 512)
#network_conv5_x_conv5_1_conv_1_weights = None  # (3, 3, 256, 512)
#network_conv5_x_conv5_1_bn_1_mu = None  # (512,)
#network_conv5_x_conv5_1_bn_1_sigma = None  # (512,)
#network_conv5_x_conv5_1_bn_1_beta = None  # (512,)
#network_conv5_x_conv5_1_bn_1_gamma = None  # (512,)
#network_conv5_x_conv5_1_conv_2_weights = None  # (3, 3, 512, 512)
#network_conv5_x_conv5_1_bn_2_mu = None  # (512,)
#network_conv5_x_conv5_1_bn_2_sigma = None  # (512,)
#network_conv5_x_conv5_1_bn_2_beta = None  # (512,)
#network_conv5_x_conv5_1_bn_2_gamma = None  # (512,)
#network_conv5_x_conv5_2_conv_1_weights = None  # (3, 3, 512, 512)
#network_conv5_x_conv5_2_bn_1_mu = None  # (512,)
#network_conv5_x_conv5_2_bn_1_sigma = None  # (512,)
#network_conv5_x_conv5_2_bn_1_beta = None  # (512,)
#network_conv5_x_conv5_2_bn_1_gamma = None  # (512,)
#network_conv5_x_conv5_2_conv_2_weights = None  # (3, 3, 512, 512)
#network_conv5_x_conv5_2_bn_2_mu = None  # (512,)
#network_conv5_x_conv5_2_bn_2_sigma = None  # (512,)
#network_conv5_x_conv5_2_bn_2_beta = None  # (512,)
#network_conv5_x_conv5_2_bn_2_gamma = None  # (512,)
#network_decoder_block_4_conv_1_conv2d_kernel = None  # (1, 1, 512, 128)
#network_decoder_block_4_conv_1_batch_normalization_gamma = None  # (128,)
#network_decoder_block_4_conv_1_batch_normalization_beta = None  # (128,)
#network_decoder_block_4_conv_1_batch_normalization_moving_mean = None  # (128,)
#network_decoder_block_4_conv_1_batch_normalization_moving_variance = None  # (128,)
#network_decoder_block_4_deconv_deconv_weights = None  # (3, 3, 128, 128)
#network_decoder_block_4_deconv_batch_normalization_gamma = None  # (128,)
#network_decoder_block_4_deconv_batch_normalization_beta = None  # (128,)
#network_decoder_block_4_deconv_batch_normalization_moving_mean = None  # (128,)
#network_decoder_block_4_deconv_batch_normalization_moving_variance = None  # (128,)
#network_decoder_block_4_conv_2_conv2d_kernel = None  # (1, 1, 128, 256)
#network_decoder_block_4_conv_2_batch_normalization_gamma = None  # (256,)
#network_decoder_block_4_conv_2_batch_normalization_beta = None  # (256,)
#network_decoder_block_4_conv_2_batch_normalization_moving_mean = None  # (256,)
#network_decoder_block_4_conv_2_batch_normalization_moving_variance = None  # (256,)
#network_decoder_block_3_conv_1_conv2d_kernel = None  # (1, 1, 256, 64)
#network_decoder_block_3_conv_1_batch_normalization_gamma = None  # (64,)
#network_decoder_block_3_conv_1_batch_normalization_beta = None  # (64,)
#network_decoder_block_3_conv_1_batch_normalization_moving_mean = None  # (64,)
#network_decoder_block_3_conv_1_batch_normalization_moving_variance = None  # (64,)
#network_decoder_block_3_deconv_deconv_weights = None  # (3, 3, 64, 64)
#network_decoder_block_3_deconv_batch_normalization_gamma = None  # (64,)
#network_decoder_block_3_deconv_batch_normalization_beta = None  # (64,)
#network_decoder_block_3_deconv_batch_normalization_moving_mean = None  # (64,)
#network_decoder_block_3_deconv_batch_normalization_moving_variance = None  # (64,)
#network_decoder_block_3_conv_2_conv2d_kernel = None  # (1, 1, 64, 128)
#network_decoder_block_3_conv_2_batch_normalization_gamma = None  # (128,)
#network_decoder_block_3_conv_2_batch_normalization_beta = None  # (128,)
#network_decoder_block_3_conv_2_batch_normalization_moving_mean = None  # (128,)
#network_decoder_block_3_conv_2_batch_normalization_moving_variance = None  # (128,)
#network_decoder_block_2_conv_1_conv2d_kernel = None  # (1, 1, 128, 32)
#network_decoder_block_2_conv_1_batch_normalization_gamma = None  # (32,)
#network_decoder_block_2_conv_1_batch_normalization_beta = None  # (32,)
#network_decoder_block_2_conv_1_batch_normalization_moving_mean = None  # (32,)
#network_decoder_block_2_conv_1_batch_normalization_moving_variance = None  # (32,)
#network_decoder_block_2_deconv_deconv_weights = None  # (3, 3, 32, 32)
#network_decoder_block_2_deconv_batch_normalization_gamma = None  # (32,)
#network_decoder_block_2_deconv_batch_normalization_beta = None  # (32,)
#network_decoder_block_2_deconv_batch_normalization_moving_mean = None  # (32,)
#network_decoder_block_2_deconv_batch_normalization_moving_variance = None  # (32,)
#network_decoder_block_2_conv_2_conv2d_kernel = None  # (1, 1, 32, 64)
#network_decoder_block_2_conv_2_batch_normalization_gamma = None  # (64,)
#network_decoder_block_2_conv_2_batch_normalization_beta = None  # (64,)
#network_decoder_block_2_conv_2_batch_normalization_moving_mean = None  # (64,)
#network_decoder_block_2_conv_2_batch_normalization_moving_variance = None  # (64,)
#network_decoder_block_1_conv_1_conv2d_kernel = None  # (1, 1, 64, 16)
#network_decoder_block_1_conv_1_batch_normalization_gamma = None  # (16,)
#network_decoder_block_1_conv_1_batch_normalization_beta = None  # (16,)
#network_decoder_block_1_conv_1_batch_normalization_moving_mean = None  # (16,)
#network_decoder_block_1_conv_1_batch_normalization_moving_variance = None  # (16,)
#network_decoder_block_1_deconv_deconv_weights = None  # (3, 3, 16, 16)
#network_decoder_block_1_deconv_batch_normalization_gamma = None  # (16,)
#network_decoder_block_1_deconv_batch_normalization_beta = None  # (16,)
#network_decoder_block_1_deconv_batch_normalization_moving_mean = None  # (16,)
#network_decoder_block_1_deconv_batch_normalization_moving_variance = None  # (16,)
#network_decoder_block_1_conv_2_conv2d_kernel = None  # (1, 1, 16, 64)
#network_decoder_block_1_conv_2_batch_normalization_gamma = None  # (64,)
#network_decoder_block_1_conv_2_batch_normalization_beta = None  # (64,)
#network_decoder_block_1_conv_2_batch_normalization_moving_mean = None  # (64,)
#network_decoder_block_1_conv_2_batch_normalization_moving_variance = None  # (64,)
#network_output_block_deconv_out_1_weights = None  # (3, 3, 32, 64)
#network_output_block_batch_normalization_gamma = None  # (32,)
#network_output_block_batch_normalization_beta = None  # (32,)
#network_output_block_batch_normalization_moving_mean = None  # (32,)
#network_output_block_batch_normalization_moving_variance = None  # (32,)
#network_output_block_conv2d_kernel = None  # (3, 3, 32, 32)
#network_output_block_batch_normalization_1_gamma = None  # (32,)
#network_output_block_batch_normalization_1_beta = None  # (32,)
#network_output_block_batch_normalization_1_moving_mean = None  # (32,)
#network_output_block_batch_normalization_1_moving_variance = None  # (32,)
#network_output_block_deconv_out_2_weights = None  # (2, 2, 20, 32)
#
#model_weights = OrderedDict({
#'network/conv1_x/conv1/weights': network_conv1_x_conv1_weights,  # (7, 7, 3, 64)
#'network/conv1_x/bn1/mu': network_conv1_x_bn1_mu,  # (64,)
#'network/conv1_x/bn1/sigma': network_conv1_x_bn1_sigma,  # (64,)
#'network/conv1_x/bn1/beta': network_conv1_x_bn1_beta,  # (64,)
#'network/conv1_x/bn1/gamma': network_conv1_x_bn1_gamma,  # (64,)
#'network/conv2_x/conv2_1/conv_1/weights': network_conv2_x_conv2_1_conv_1_weights,  # (3, 3, 64, 64)
#'network/conv2_x/conv2_1/bn_1/mu': network_conv2_x_conv2_1_bn_1_mu,  # (64,)
#'network/conv2_x/conv2_1/bn_1/sigma': network_conv2_x_conv2_1_bn_1_sigma,  # (64,)
#'network/conv2_x/conv2_1/bn_1/beta': network_conv2_x_conv2_1_bn_1_beta,  # (64,)
#'network/conv2_x/conv2_1/bn_1/gamma': network_conv2_x_conv2_1_bn_1_gamma,  # (64,)
#'network/conv2_x/conv2_1/conv_2/weights': network_conv2_x_conv2_1_conv_2_weights,  # (3, 3, 64, 64)
#'network/conv2_x/conv2_1/bn_2/mu': network_conv2_x_conv2_1_bn_2_mu,  # (64,)
#'network/conv2_x/conv2_1/bn_2/sigma': network_conv2_x_conv2_1_bn_2_sigma,  # (64,)
#'network/conv2_x/conv2_1/bn_2/beta': network_conv2_x_conv2_1_bn_2_beta,  # (64,)
#'network/conv2_x/conv2_1/bn_2/gamma': network_conv2_x_conv2_1_bn_2_gamma,  # (64,)
#'network/conv2_x/conv2_2/conv_1/weights': network_conv2_x_conv2_2_conv_1_weights,  # (3, 3, 64, 64)
#'network/conv2_x/conv2_2/bn_1/mu': network_conv2_x_conv2_2_bn_1_mu,  # (64,)
#'network/conv2_x/conv2_2/bn_1/sigma': network_conv2_x_conv2_2_bn_1_sigma,  # (64,)
#'network/conv2_x/conv2_2/bn_1/beta': network_conv2_x_conv2_2_bn_1_beta,  # (64,)
#'network/conv2_x/conv2_2/bn_1/gamma': network_conv2_x_conv2_2_bn_1_gamma,  # (64,)
#'network/conv2_x/conv2_2/conv_2/weights': network_conv2_x_conv2_2_conv_2_weights,  # (3, 3, 64, 64)
#'network/conv2_x/conv2_2/bn_2/mu': network_conv2_x_conv2_2_bn_2_mu,  # (64,)
#'network/conv2_x/conv2_2/bn_2/sigma': network_conv2_x_conv2_2_bn_2_sigma,  # (64,)
#'network/conv2_x/conv2_2/bn_2/beta': network_conv2_x_conv2_2_bn_2_beta,  # (64,)
#'network/conv2_x/conv2_2/bn_2/gamma': network_conv2_x_conv2_2_bn_2_gamma,  # (64,)
#'network/conv3_x/conv3_1/shortcut_conv/weights': network_conv3_x_conv3_1_shortcut_conv_weights,  # (1, 1, 64, 128)
#'network/conv3_x/conv3_1/conv_1/weights': network_conv3_x_conv3_1_conv_1_weights,  # (3, 3, 64, 128)
#'network/conv3_x/conv3_1/bn_1/mu': network_conv3_x_conv3_1_bn_1_mu,  # (128,)
#'network/conv3_x/conv3_1/bn_1/sigma': network_conv3_x_conv3_1_bn_1_sigma,  # (128,)
#'network/conv3_x/conv3_1/bn_1/beta': network_conv3_x_conv3_1_bn_1_beta,  # (128,)
#'network/conv3_x/conv3_1/bn_1/gamma': network_conv3_x_conv3_1_bn_1_gamma,  # (128,)
#'network/conv3_x/conv3_1/conv_2/weights': network_conv3_x_conv3_1_conv_2_weights,  # (3, 3, 128, 128)
#'network/conv3_x/conv3_1/bn_2/mu': network_conv3_x_conv3_1_bn_2_mu,  # (128,)
#'network/conv3_x/conv3_1/bn_2/sigma': network_conv3_x_conv3_1_bn_2_sigma,  # (128,)
#'network/conv3_x/conv3_1/bn_2/beta': network_conv3_x_conv3_1_bn_2_beta,  # (128,)
#'network/conv3_x/conv3_1/bn_2/gamma': network_conv3_x_conv3_1_bn_2_gamma,  # (128,)
#'network/conv3_x/conv3_2/conv_1/weights': network_conv3_x_conv3_2_conv_1_weights,  # (3, 3, 128, 128)
#'network/conv3_x/conv3_2/bn_1/mu': network_conv3_x_conv3_2_bn_1_mu,  # (128,)
#'network/conv3_x/conv3_2/bn_1/sigma': network_conv3_x_conv3_2_bn_1_sigma,  # (128,)
#'network/conv3_x/conv3_2/bn_1/beta': network_conv3_x_conv3_2_bn_1_beta,  # (128,)
#'network/conv3_x/conv3_2/bn_1/gamma': network_conv3_x_conv3_2_bn_1_gamma,  # (128,)
#'network/conv3_x/conv3_2/conv_2/weights': network_conv3_x_conv3_2_conv_2_weights,  # (3, 3, 128, 128)
#'network/conv3_x/conv3_2/bn_2/mu': network_conv3_x_conv3_2_bn_2_mu,  # (128,)
#'network/conv3_x/conv3_2/bn_2/sigma': network_conv3_x_conv3_2_bn_2_sigma,  # (128,)
#'network/conv3_x/conv3_2/bn_2/beta': network_conv3_x_conv3_2_bn_2_beta,  # (128,)
#'network/conv3_x/conv3_2/bn_2/gamma': network_conv3_x_conv3_2_bn_2_gamma,  # (128,)
#'network/conv4_x/conv4_1/shortcut_conv/weights': network_conv4_x_conv4_1_shortcut_conv_weights,  # (1, 1, 128, 256)
#'network/conv4_x/conv4_1/conv_1/weights': network_conv4_x_conv4_1_conv_1_weights,  # (3, 3, 128, 256)
#'network/conv4_x/conv4_1/bn_1/mu': network_conv4_x_conv4_1_bn_1_mu,  # (256,)
#'network/conv4_x/conv4_1/bn_1/sigma': network_conv4_x_conv4_1_bn_1_sigma,  # (256,)
#'network/conv4_x/conv4_1/bn_1/beta': network_conv4_x_conv4_1_bn_1_beta,  # (256,)
#'network/conv4_x/conv4_1/bn_1/gamma': network_conv4_x_conv4_1_bn_1_gamma,  # (256,)
#'network/conv4_x/conv4_1/conv_2/weights': network_conv4_x_conv4_1_conv_2_weights,  # (3, 3, 256, 256)
#'network/conv4_x/conv4_1/bn_2/mu': network_conv4_x_conv4_1_bn_2_mu,  # (256,)
#'network/conv4_x/conv4_1/bn_2/sigma': network_conv4_x_conv4_1_bn_2_sigma,  # (256,)
#'network/conv4_x/conv4_1/bn_2/beta': network_conv4_x_conv4_1_bn_2_beta,  # (256,)
#'network/conv4_x/conv4_1/bn_2/gamma': network_conv4_x_conv4_1_bn_2_gamma,  # (256,)
#'network/conv4_x/conv4_2/conv_1/weights': network_conv4_x_conv4_2_conv_1_weights,  # (3, 3, 256, 256)
#'network/conv4_x/conv4_2/bn_1/mu': network_conv4_x_conv4_2_bn_1_mu,  # (256,)
#'network/conv4_x/conv4_2/bn_1/sigma': network_conv4_x_conv4_2_bn_1_sigma,  # (256,)
#'network/conv4_x/conv4_2/bn_1/beta': network_conv4_x_conv4_2_bn_1_beta,  # (256,)
#'network/conv4_x/conv4_2/bn_1/gamma': network_conv4_x_conv4_2_bn_1_gamma,  # (256,)
#'network/conv4_x/conv4_2/conv_2/weights': network_conv4_x_conv4_2_conv_2_weights,  # (3, 3, 256, 256)
#'network/conv4_x/conv4_2/bn_2/mu': network_conv4_x_conv4_2_bn_2_mu,  # (256,)
#'network/conv4_x/conv4_2/bn_2/sigma': network_conv4_x_conv4_2_bn_2_sigma,  # (256,)
#'network/conv4_x/conv4_2/bn_2/beta': network_conv4_x_conv4_2_bn_2_beta,  # (256,)
#'network/conv4_x/conv4_2/bn_2/gamma': network_conv4_x_conv4_2_bn_2_gamma,  # (256,)
#'network/conv5_x/conv5_1/shortcut_conv/weights': network_conv5_x_conv5_1_shortcut_conv_weights,  # (1, 1, 256, 512)
#'network/conv5_x/conv5_1/conv_1/weights': network_conv5_x_conv5_1_conv_1_weights,  # (3, 3, 256, 512)
#'network/conv5_x/conv5_1/bn_1/mu': network_conv5_x_conv5_1_bn_1_mu,  # (512,)
#'network/conv5_x/conv5_1/bn_1/sigma': network_conv5_x_conv5_1_bn_1_sigma,  # (512,)
#'network/conv5_x/conv5_1/bn_1/beta': network_conv5_x_conv5_1_bn_1_beta,  # (512,)
#'network/conv5_x/conv5_1/bn_1/gamma': network_conv5_x_conv5_1_bn_1_gamma,  # (512,)
#'network/conv5_x/conv5_1/conv_2/weights': network_conv5_x_conv5_1_conv_2_weights,  # (3, 3, 512, 512)
#'network/conv5_x/conv5_1/bn_2/mu': network_conv5_x_conv5_1_bn_2_mu,  # (512,)
#'network/conv5_x/conv5_1/bn_2/sigma': network_conv5_x_conv5_1_bn_2_sigma,  # (512,)
#'network/conv5_x/conv5_1/bn_2/beta': network_conv5_x_conv5_1_bn_2_beta,  # (512,)
#'network/conv5_x/conv5_1/bn_2/gamma': network_conv5_x_conv5_1_bn_2_gamma,  # (512,)
#'network/conv5_x/conv5_2/conv_1/weights': network_conv5_x_conv5_2_conv_1_weights,  # (3, 3, 512, 512)
#'network/conv5_x/conv5_2/bn_1/mu': network_conv5_x_conv5_2_bn_1_mu,  # (512,)
#'network/conv5_x/conv5_2/bn_1/sigma': network_conv5_x_conv5_2_bn_1_sigma,  # (512,)
#'network/conv5_x/conv5_2/bn_1/beta': network_conv5_x_conv5_2_bn_1_beta,  # (512,)
#'network/conv5_x/conv5_2/bn_1/gamma': network_conv5_x_conv5_2_bn_1_gamma,  # (512,)
#'network/conv5_x/conv5_2/conv_2/weights': network_conv5_x_conv5_2_conv_2_weights,  # (3, 3, 512, 512)
#'network/conv5_x/conv5_2/bn_2/mu': network_conv5_x_conv5_2_bn_2_mu,  # (512,)
#'network/conv5_x/conv5_2/bn_2/sigma': network_conv5_x_conv5_2_bn_2_sigma,  # (512,)
#'network/conv5_x/conv5_2/bn_2/beta': network_conv5_x_conv5_2_bn_2_beta,  # (512,)
#'network/conv5_x/conv5_2/bn_2/gamma': network_conv5_x_conv5_2_bn_2_gamma,  # (512,)
#'network/decoder_block_4/conv_1/conv2d/kernel': network_decoder_block_4_conv_1_conv2d_kernel,  # (1, 1, 512, 128)
#'network/decoder_block_4/conv_1/batch_normalization/gamma': network_decoder_block_4_conv_1_batch_normalization_gamma,  # (128,)
#'network/decoder_block_4/conv_1/batch_normalization/beta': network_decoder_block_4_conv_1_batch_normalization_beta,  # (128,)
#'network/decoder_block_4/conv_1/batch_normalization/moving_mean': network_decoder_block_4_conv_1_batch_normalization_moving_mean,  # (128,)
#'network/decoder_block_4/conv_1/batch_normalization/moving_variance': network_decoder_block_4_conv_1_batch_normalization_moving_variance,  # (128,)
#'network/decoder_block_4/deconv/deconv/weights': network_decoder_block_4_deconv_deconv_weights,  # (3, 3, 128, 128)
#'network/decoder_block_4/deconv/batch_normalization/gamma': network_decoder_block_4_deconv_batch_normalization_gamma,  # (128,)
#'network/decoder_block_4/deconv/batch_normalization/beta': network_decoder_block_4_deconv_batch_normalization_beta,  # (128,)
#'network/decoder_block_4/deconv/batch_normalization/moving_mean': network_decoder_block_4_deconv_batch_normalization_moving_mean,  # (128,)
#'network/decoder_block_4/deconv/batch_normalization/moving_variance': network_decoder_block_4_deconv_batch_normalization_moving_variance,  # (128,)
#'network/decoder_block_4/conv_2/conv2d/kernel': network_decoder_block_4_conv_2_conv2d_kernel,  # (1, 1, 128, 256)
#'network/decoder_block_4/conv_2/batch_normalization/gamma': network_decoder_block_4_conv_2_batch_normalization_gamma,  # (256,)
#'network/decoder_block_4/conv_2/batch_normalization/beta': network_decoder_block_4_conv_2_batch_normalization_beta,  # (256,)
#'network/decoder_block_4/conv_2/batch_normalization/moving_mean': network_decoder_block_4_conv_2_batch_normalization_moving_mean,  # (256,)
#'network/decoder_block_4/conv_2/batch_normalization/moving_variance': network_decoder_block_4_conv_2_batch_normalization_moving_variance,  # (256,)
#'network/decoder_block_3/conv_1/conv2d/kernel': network_decoder_block_3_conv_1_conv2d_kernel,  # (1, 1, 256, 64)
#'network/decoder_block_3/conv_1/batch_normalization/gamma': network_decoder_block_3_conv_1_batch_normalization_gamma,  # (64,)
#'network/decoder_block_3/conv_1/batch_normalization/beta': network_decoder_block_3_conv_1_batch_normalization_beta,  # (64,)
#'network/decoder_block_3/conv_1/batch_normalization/moving_mean': network_decoder_block_3_conv_1_batch_normalization_moving_mean,  # (64,)
#'network/decoder_block_3/conv_1/batch_normalization/moving_variance': network_decoder_block_3_conv_1_batch_normalization_moving_variance,  # (64,)
#'network/decoder_block_3/deconv/deconv/weights': network_decoder_block_3_deconv_deconv_weights,  # (3, 3, 64, 64)
#'network/decoder_block_3/deconv/batch_normalization/gamma': network_decoder_block_3_deconv_batch_normalization_gamma,  # (64,)
#'network/decoder_block_3/deconv/batch_normalization/beta': network_decoder_block_3_deconv_batch_normalization_beta,  # (64,)
#'network/decoder_block_3/deconv/batch_normalization/moving_mean': network_decoder_block_3_deconv_batch_normalization_moving_mean,  # (64,)
#'network/decoder_block_3/deconv/batch_normalization/moving_variance': network_decoder_block_3_deconv_batch_normalization_moving_variance,  # (64,)
#'network/decoder_block_3/conv_2/conv2d/kernel': network_decoder_block_3_conv_2_conv2d_kernel,  # (1, 1, 64, 128)
#'network/decoder_block_3/conv_2/batch_normalization/gamma': network_decoder_block_3_conv_2_batch_normalization_gamma,  # (128,)
#'network/decoder_block_3/conv_2/batch_normalization/beta': network_decoder_block_3_conv_2_batch_normalization_beta,  # (128,)
#'network/decoder_block_3/conv_2/batch_normalization/moving_mean': network_decoder_block_3_conv_2_batch_normalization_moving_mean,  # (128,)
#'network/decoder_block_3/conv_2/batch_normalization/moving_variance': network_decoder_block_3_conv_2_batch_normalization_moving_variance,  # (128,)
#'network/decoder_block_2/conv_1/conv2d/kernel': network_decoder_block_2_conv_1_conv2d_kernel,  # (1, 1, 128, 32)
#'network/decoder_block_2/conv_1/batch_normalization/gamma': network_decoder_block_2_conv_1_batch_normalization_gamma,  # (32,)
#'network/decoder_block_2/conv_1/batch_normalization/beta': network_decoder_block_2_conv_1_batch_normalization_beta,  # (32,)
#'network/decoder_block_2/conv_1/batch_normalization/moving_mean': network_decoder_block_2_conv_1_batch_normalization_moving_mean,  # (32,)
#'network/decoder_block_2/conv_1/batch_normalization/moving_variance': network_decoder_block_2_conv_1_batch_normalization_moving_variance,  # (32,)
#'network/decoder_block_2/deconv/deconv/weights': network_decoder_block_2_deconv_deconv_weights,  # (3, 3, 32, 32)
#'network/decoder_block_2/deconv/batch_normalization/gamma': network_decoder_block_2_deconv_batch_normalization_gamma,  # (32,)
#'network/decoder_block_2/deconv/batch_normalization/beta': network_decoder_block_2_deconv_batch_normalization_beta,  # (32,)
#'network/decoder_block_2/deconv/batch_normalization/moving_mean': network_decoder_block_2_deconv_batch_normalization_moving_mean,  # (32,)
#'network/decoder_block_2/deconv/batch_normalization/moving_variance': network_decoder_block_2_deconv_batch_normalization_moving_variance,  # (32,)
#'network/decoder_block_2/conv_2/conv2d/kernel': network_decoder_block_2_conv_2_conv2d_kernel,  # (1, 1, 32, 64)
#'network/decoder_block_2/conv_2/batch_normalization/gamma': network_decoder_block_2_conv_2_batch_normalization_gamma,  # (64,)
#'network/decoder_block_2/conv_2/batch_normalization/beta': network_decoder_block_2_conv_2_batch_normalization_beta,  # (64,)
#'network/decoder_block_2/conv_2/batch_normalization/moving_mean': network_decoder_block_2_conv_2_batch_normalization_moving_mean,  # (64,)
#'network/decoder_block_2/conv_2/batch_normalization/moving_variance': network_decoder_block_2_conv_2_batch_normalization_moving_variance,  # (64,)
#'network/decoder_block_1/conv_1/conv2d/kernel': network_decoder_block_1_conv_1_conv2d_kernel,  # (1, 1, 64, 16)
#'network/decoder_block_1/conv_1/batch_normalization/gamma': network_decoder_block_1_conv_1_batch_normalization_gamma,  # (16,)
#'network/decoder_block_1/conv_1/batch_normalization/beta': network_decoder_block_1_conv_1_batch_normalization_beta,  # (16,)
#'network/decoder_block_1/conv_1/batch_normalization/moving_mean': network_decoder_block_1_conv_1_batch_normalization_moving_mean,  # (16,)
#'network/decoder_block_1/conv_1/batch_normalization/moving_variance': network_decoder_block_1_conv_1_batch_normalization_moving_variance,  # (16,)
#'network/decoder_block_1/deconv/deconv/weights': network_decoder_block_1_deconv_deconv_weights,  # (3, 3, 16, 16)
#'network/decoder_block_1/deconv/batch_normalization/gamma': network_decoder_block_1_deconv_batch_normalization_gamma,  # (16,)
#'network/decoder_block_1/deconv/batch_normalization/beta': network_decoder_block_1_deconv_batch_normalization_beta,  # (16,)
#'network/decoder_block_1/deconv/batch_normalization/moving_mean': network_decoder_block_1_deconv_batch_normalization_moving_mean,  # (16,)
#'network/decoder_block_1/deconv/batch_normalization/moving_variance': network_decoder_block_1_deconv_batch_normalization_moving_variance,  # (16,)
#'network/decoder_block_1/conv_2/conv2d/kernel': network_decoder_block_1_conv_2_conv2d_kernel,  # (1, 1, 16, 64)
#'network/decoder_block_1/conv_2/batch_normalization/gamma': network_decoder_block_1_conv_2_batch_normalization_gamma,  # (64,)
#'network/decoder_block_1/conv_2/batch_normalization/beta': network_decoder_block_1_conv_2_batch_normalization_beta,  # (64,)
#'network/decoder_block_1/conv_2/batch_normalization/moving_mean': network_decoder_block_1_conv_2_batch_normalization_moving_mean,  # (64,)
#'network/decoder_block_1/conv_2/batch_normalization/moving_variance': network_decoder_block_1_conv_2_batch_normalization_moving_variance,  # (64,)
#'network/output_block/deconv_out_1/weights': network_output_block_deconv_out_1_weights,  # (3, 3, 32, 64)
#'network/output_block/batch_normalization/gamma': network_output_block_batch_normalization_gamma,  # (32,)
#'network/output_block/batch_normalization/beta': network_output_block_batch_normalization_beta,  # (32,)
#'network/output_block/batch_normalization/moving_mean': network_output_block_batch_normalization_moving_mean,  # (32,)
#'network/output_block/batch_normalization/moving_variance': network_output_block_batch_normalization_moving_variance,  # (32,)
#'network/output_block/conv2d/kernel': network_output_block_conv2d_kernel,  # (3, 3, 32, 32)
#'network/output_block/batch_normalization_1/gamma': network_output_block_batch_normalization_1_gamma,  # (32,)
#'network/output_block/batch_normalization_1/beta': network_output_block_batch_normalization_1_beta,  # (32,)
#'network/output_block/batch_normalization_1/moving_mean': network_output_block_batch_normalization_1_moving_mean,  # (32,)
#'network/output_block/batch_normalization_1/moving_variance': network_output_block_batch_normalization_1_moving_variance,  # (32,)
#'network/output_block/deconv_out_2/weights': network_output_block_deconv_out_2_weights,  # (2, 2, 20, 32)
#
#})
#


## Transpose conv and fc weights
#for k, v in model_weights.items():
#    if len(v.shape) == 4:
#        model_weights[k] = np.transpose(v, (2, 3, 1, 0))
#    elif len(v.shape) == 2:
#        model_weights[k] = np.transpose(v)
#    else:
#        model_weights[k] = v
#    print('name: ' + k + " - shape: " + str(model_weights[k].shape))

#with open('linknet_weights.pkl', "wb") as f:
#    pickle.dump(model_weights, f)
